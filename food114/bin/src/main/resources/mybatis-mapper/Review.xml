<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamProject.food114.mapper.ReviewMapper">
	<!-- 가게 리뷰 검색 -->
	<select id="selectReviewList" parameterType="hashmap"
		resultType="teamProject.food114.model.Review">
		SELECT
		R.*, M.*,
		DATE_FORMAT(O.ORDERDATE, '%y-%m-%d') AS
		orderDate,
		CONCAT(P.FILEPATH,P.FILENAME) AS PATH
		FROM FOOD114_REVIEW R
		INNER JOIN FOOD114_ORDER_DETAIL D ON
		R.ORDERNO = D.ORDERNO
		INNER JOIN
		FOOD114_ORDERS O ON O.ORDERNO =
		D.ORDERNO
		INNER JOIN FOOD114_MENU M ON
		D.MENUNO = M.MENUNO
		LEFT JOIN
		FOOD114_REVIEW_PHOTO P ON R.REVIEWNO =
		P.REVIEWNO
		WHERE M.BIZID =
		#{bizId}
	</select>

	<!-- 리뷰 정보(biz) -->
	<select id="selectBizReviewList" parameterType="hashmap"
		resultType="teamProject.food114.model.Review">
		SELECT R.REVIEWNO, R.P_REVIEWNO, O.USERID, R.RAITING,
		P.FILENAME, R.CONTENTS, R.ORDERNO, GROUP_CONCAT(CONCAT(M.MENU, '(',
		D.COUNT, ')') SEPARATOR ', ') AS MENULIST, O.ORDERDATE, R2.CONTENTS AS
		PCONTENTS, R2.REVIEWNO AS PNO
		FROM FOOD114_REVIEW R
		INNER JOIN
		FOOD114_ORDERS O ON R.ORDERNO = O.ORDERNO
		INNER JOIN
		FOOD114_ORDER_DETAIL D ON O.ORDERNO = D.ORDERNO
		INNER JOIN FOOD114_MENU
		M ON D.MENUNO = M.MENUNO
		LEFT JOIN FOOD114_REVIEW_PHOTO P ON R.REVIEWNO
		= P.REVIEWNO
		LEFT JOIN FOOD114_REVIEW R2 ON R.REVIEWNO = R2.P_REVIEWNO
		WHERE
		R.P_REVIEWNO IS NULL
		GROUP BY R.REVIEWNO, R.P_REVIEWNO, O.USERID,
		R.RAITING, P.FILENAME,
		R.CONTENTS, R.ORDERNO, O.ORDERDATE, O.BIZID
		HAVING O.BIZID = #{bizId} AND R.P_REVIEWNO IS NULL
	</select>
	<!-- 리뷰정보(user) -->
	<select id="selectUserReviewList" parameterType="hashmap"
		resultType="teamProject.food114.model.Review">
		SELECT B.BIZNAME, DATE_FORMAT(R.CDATETIME, '%Y-%m-%d
		%H:%i') AS reviewDate,
		R.REVIEWNO, R.P_REVIEWNO, O.USERID, R.RAITING,
		P.FILENAME, R.CONTENTS,
		R.ORDERNO, GROUP_CONCAT(CONCAT(M.MENU, '(',
		D.COUNT, ')') SEPARATOR ',
		') AS MENULIST, O.ORDERDATE, R2.CONTENTS AS
		PCONTENTS, R2.REVIEWNO AS
		PNO, SUM(D.UNITPRICE) AS TOTALPRICE
		FROM
		FOOD114_REVIEW R
		INNER JOIN FOOD114_ORDERS O ON R.ORDERNO = O.ORDERNO
		INNER JOIN FOOD114_ORDER_DETAIL D ON O.ORDERNO = D.ORDERNO
		INNER JOIN
		FOOD114_BIZ_INFO B ON O.BIZID = B.BIZID
		INNER JOIN FOOD114_MENU M ON
		D.MENUNO = M.MENUNO
		LEFT JOIN FOOD114_REVIEW_PHOTO P ON R.REVIEWNO =
		P.REVIEWNO
		LEFT JOIN FOOD114_REVIEW R2 ON R.REVIEWNO = R2.P_REVIEWNO
		INNER JOIN (
		SELECT O.ORDERNO, SUM(D.UNITPRICE) AS TOTAL_PRICE
		FROM
		FOOD114_ORDERS O
		INNER JOIN FOOD114_ORDER_DETAIL D ON O.ORDERNO =
		D.ORDERNO
		GROUP BY O.ORDERNO
		) AS T ON O.ORDERNO = T.ORDERNO
		WHERE
		R.P_REVIEWNO IS NULL
		AND O.USERID = #{userId}
		GROUP BY R.REVIEWNO,
		R.P_REVIEWNO, O.USERID, R.RAITING, P.FILENAME,
		R.CONTENTS, R.ORDERNO,
		O.ORDERDATE, O.BIZID, R2.CONTENTS, R2.REVIEWNO
		ORDER BY R.CDATETIME DESC

	</select>
	<!-- 리뷰 정보 자세히 -->
	<select id="selectBizReviewInfo" parameterType="hashmap"
		resultType="teamProject.food114.model.Review">
		SELECT R.REVIEWNO, O.USERID, R.RAITING, P.FILENAME,
		R.CONTENTS, R.ORDERNO, GROUP_CONCAT(CONCAT(M.MENU, '(', D.COUNT, ')')
		SEPARATOR ', ') AS MENULIST, O.ORDERDATE, R2.CONTENTS AS PCONTENTS,
		R2.REVIEWNO AS PNO
		FROM FOOD114_REVIEW R
		INNER JOIN FOOD114_ORDERS O ON
		R.ORDERNO = O.ORDERNO
		INNER JOIN FOOD114_ORDER_DETAIL D ON O.ORDERNO =
		D.ORDERNO
		INNER JOIN FOOD114_MENU M ON D.MENUNO = M.MENUNO
		LEFT JOIN
		FOOD114_REVIEW_PHOTO P ON R.REVIEWNO = P.REVIEWNO
		LEFT JOIN
		FOOD114_REVIEW R2 ON R.REVIEWNO = R2.P_REVIEWNO WHERE R.P_REVIEWNO IS
		NULL
		GROUP BY R.REVIEWNO, O.USERID, R.RAITING, P.FILENAME, R.CONTENTS,
		R.ORDERNO, O.ORDERDATE
		HAVING R.REVIEWNO = #{reviewNo}
	</select>


	<insert id="insertPreview" parameterType="hashmap">
		INSERT INTO
		FOOD114_REVIEW
		VALUES(NULL,#{orderNo},#{bizId},null,#{contents},NOW(),#{reviewNo})
	</insert>

	<update id="updatePreview" parameterType="hashmap">
		UPDATE FOOD114_REVIEW
		SET CONTENTS = #{contents} WHERE REVIEWNO = #{reviewNo}
	</update>

	<!-- 리뷰 내용 검색 -->
	<select id="selectReviewInfo" parameterType="hashmap"
		resultType="teamProject.food114.model.Review">
		SELECT B.BIZNAME, MENULIST, O.BIZID, O.ORDERNO,	R.USERID, R.RAITING AS RAITING , R.CONTENTS AS USERREVIEW, DATE_FORMAT(R.CDATETIME,'%Y/%m/%d') AS USERREVIEWDATE,
		V.CONTENTS AS SHOPCMT, DATE_FORMAT(V.CDATETIME, '%Y/%m/%d') AS SHOPCMTDATE, R.USERID, R.RAITING AS	RAITING , R.CONTENTS AS USERREVIEW,	DATE_FORMAT(R.CDATETIME,'%y/%m/%d') AS USERREVIEWDATE,
		V.CONTENTS AS	SHOPCMT, DATE_FORMAT(V.CDATETIME, '%y/%m/%d') AS SHOPCMTDATE,	CONCAT(P.FILEPATH,P.FILENAME) AS PATH
		FROM (
			SELECT * 
			FROM FOOD114_REVIEW WHERE P_REVIEWNO IS NULL) R
			LEFT JOIN FOOD114_REVIEW V ON R.REVIEWNO = V.P_REVIEWNO
			LEFT JOIN FOOD114_REVIEW_PHOTO P ON R.REVIEWNO = P.REVIEWNO
			INNER JOIN FOOD114_ORDERS O ON R.ORDERNO = O.ORDERNO
			INNER JOIN FOOD114_BIZ_INFO B ON O.BIZID = B.BIZID
		INNER JOIN (
			SELECT D.ORDERNO,GROUP_CONCAT(MENU) AS MENULIST
			FROM FOOD114_ORDER_DETAIL D
			INNER JOIN FOOD114_MENU M ON D.MENUNO = M.MENUNO
			GROUP BY D.ORDERNO) M ON R.ORDERNO = M.ORDERNO
		WHERE O.BIZID =	#{bizId}
		ORDER BY R.CDATETIME DESC
	</select>

	<select id="selectOrederListView" parameterType="hashmap"
		resultType="teamProject.food114.model.Review">
		SELECT O.ORDERNO,O.USERID,O.BIZID,
		GROUP_CONCAT(CONCAT(M.MENU, '(', D.COUNT, ')') SEPARATOR ',
		') AS
		MENULIST,DATE_FORMAT(O.ORDERDATE, '%Y-%m-%d %H:%i') AS ORDERDATE,
		I.BIZNAME
		FROM FOOD114_ORDERS O
		LEFT JOIN FOOD114_REVIEW R ON O.ORDERNO
		= R.ORDERNO
		INNER JOIN FOOD114_ORDER_DETAIL D ON O.ORDERNO = D.ORDERNO
		INNER JOIN FOOD114_MENU M ON D.MENUNO = M.MENUNO
		INNER JOIN
		FOOD114_BIZ_INFO I ON O.BIZID = I.BIZID
		WHERE O.USERID = #{userId} AND
		R.REVIEWNO IS NULL
		GROUP BY O.ORDERNO
		ORDER BY ORDERDATE DESC
	</select>
	
	<select id="selectOrederListEdit" parameterType="hashmap"
		resultType="teamProject.food114.model.Review">
		SELECT O.ORDERNO,O.USERID,O.BIZID,
		GROUP_CONCAT(CONCAT(M.MENU, '(', D.COUNT, ')') SEPARATOR ',
		') AS
		MENULIST,DATE_FORMAT(O.ORDERDATE, '%Y-%m-%d %H:%i') AS ORDERDATE,
		I.BIZNAME
		FROM FOOD114_ORDERS O
		LEFT JOIN FOOD114_REVIEW R ON O.ORDERNO
		= R.ORDERNO
		INNER JOIN FOOD114_ORDER_DETAIL D ON O.ORDERNO = D.ORDERNO
		INNER JOIN FOOD114_MENU M ON D.MENUNO = M.MENUNO
		INNER JOIN
		FOOD114_BIZ_INFO I ON O.BIZID = I.BIZID
		WHERE O.USERID = #{userId} AND
		O.ORDERNO = #{orderNo} AND
		R.REVIEWNO IS NULL
		GROUP BY O.ORDERNO
	</select>
	
	<insert id="insertReviewAdd" parameterType="hashmap">
		INSERT INTO
		FOOD114_REVIEW
		VALUES(NULL, #{orderNo}, #{userId}, #{raiting}, #{contents}, NOW(), NULL)
	</insert>
</mapper>