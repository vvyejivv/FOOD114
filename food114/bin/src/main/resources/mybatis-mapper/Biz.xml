<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamProject.food114.mapper.BizMapper">
	<!-- 이벤트 활성화 여부 -->
	<select id="selectEventStatus" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT
		<![CDATA[ date_format(NOW(),"%Y%m%d")>=date_format(begintime,"%Y%m%d") AND date_format(NOW(),"%Y%m%d")<=date_format(endtime,"%Y%m%d") and setbegintime<= DATE_FORMAT(NOW(), '%H%i')
		AND DATE_FORMAT(NOW(), '%H%i')<= setendtime AS EVENTSTATUS ]]>
		FROM
		FOOD114_BOARD
		WHERE
		CODE = 4
		AND userid = #{bizId}
		AND endyn = 'N';
	</select>

	<insert id="insertBiz" parameterType="hashmap">
		INSERT INTO
		FOOD114_BIZ_INFO
		VALUES(#{bizId},#{bizPwd},#{bizNo},#{bizName},#{ownerName},#{email},#{phone},#{newAddr},#{oldAddr},#{detail},#{latitude},#{longitude},NOW(),NOW(),#{bank},#{accountNum},null,'1',null,null,'Y',null,null)
	</insert>
	<select id="selectBizId" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT *
		FROM FOOD114_BIZ_INFO
		WHERE BIZID = #{bizId}
	</select>

	<select id="idCheck" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT * FROM FOOD114_BIZ_INFO WHERE BIZID = #{bizId}
	</select>
	<!-- 가게정보(사진포함) -->
	<select id="selectBizInfoFile" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT B.*,
		CONCAT(F.FILEPATH, F.FILENAME) AS PATH,
		F.STATUS,
		CONCAT(SUBSTRING(B.OPENTIME,1,2), ':',
		SUBSTRING(B.OPENTIME,3,2)) AS OPEN,
		CONCAT(SUBSTRING(B.CLOSETIME,1,2),
		':', SUBSTRING(B.CLOSETIME,3,2)) AS
		CLOSE,
		CASE
		WHEN B.OPENYN = 'Y' THEN
		'운영중'
		WHEN B.OPENYN = 'N' THEN '운영종료'
		ELSE '알 수 없음'
		END AS SHOPOPENYN
		FROM FOOD114_BIZ_INFO B
		LEFT JOIN FOOD114_BIZ_FILE F ON
		B.BIZID =
		F.BIZID AND STATUS = 'COMPLETE'
		WHERE B.BIZID = #{bizId}
	</select>
	<select id="emailCheck" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT * FROM FOOD114_BIZ_INFO WHERE EMAIL = #{email}
	</select>
	<select id="selectBizList" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT
		I.*,
		REVIEWAVG,
		REVIEWCNT,
		TITLE,
		CONTENTS,
		CATEGORYNAME,
		CONCAT(F.FILEPATH, F.FILENAME) AS PATH
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN
		FOOD114_BIZ_FILE F ON I.BIZID = F.BIZID
		AND F.DELETETIME IS NULL
		AND
		STATUS = 'COMPLETE'
		INNER JOIN (
		SELECT
		I.BIZID,
		IFNULL(
		ROUND(
		AVG(RAITING),
		1
		),
		0
		) AS REVIEWAVG,
		B.TITLE,
		B.CONTENTS,
		COUNT(REVIEWNO) AS
		REVIEWCNT
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN FOOD114_ORDERS O ON I.BIZID =
		O.BIZID
		LEFT JOIN FOOD114_REVIEW R ON O.ORDERNO = R.ORDERNO AND R.P_REVIEWNO IS NULL
		LEFT JOIN
		FOOD114_BOARD B ON I.BIZID = B.USERID AND B.ENDYN = 'N'
		GROUP BY
		I.BIZID
		) RE ON I.BIZID = RE.BIZID
		INNER JOIN FOOD114_CATEGORY C ON
		I.BIZCATEGORY = C.CATEGORYNO
	</select>

	<!-- 시 리스트 -->
	<select id="selectSiList" parameterType="hashmap"
		resultType="teamProject.food114.model.Area">
		SELECT SI FROM FOOD114_AREA GROUP BY SI
	</select>

	<!-- 구 리스트 -->
	<select id="selectGuList" parameterType="hashmap"
		resultType="teamProject.food114.model.Area">
		SELECT GU FROM FOOD114_AREA WHERE SI = #{si} GROUP BY GU
		ORDER BY GU
	</select>

	<!-- 동 리스트 -->
	<select id="selectDongList" parameterType="hashmap"
		resultType="teamProject.food114.model.Area">
		SELECT DONG FROM FOOD114_AREA WHERE SI = #{si} AND GU =
		#{gu} GROUP BY DONG ORDER BY DONG
	</select>

	<select id="selectBizInfo" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT I.*, CATEGORYNAME, NAME AS BANKNAME
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN FOOD114_CATEGORY C1 ON I.BIZCATEGORY =
		C1.CATEGORYNO
		INNER JOIN FOOD114_CODE C2 ON I.BANK = C2.VALUE AND
		C2.KIND = 'bank'
		WHERE
		BIZID = #{bizId}
	</select>

	<!-- 파일 대기상태로 INSERT -->
	<insert id="insertBizFile" parameterType="hashmap">
		INSERT INTO
		FOOD114_BIZ_FILE VALUES(null, #{bizId}, #{path}, #{fileName},
		#{orgName}, #{fileSize}, #{etc}, null,"WAIT")
	</insert>

	<!-- 상태 COMPLETE, 삭제되지 않은 사진만 조회 -->
	<select id="selectBizFile" parameterType="hashmap"
		resultType="teamProject.food114.model.BizFile">
		SELECT B.*, CONCAT(FILEPATH, FILENAME) AS PATH FROM
		FOOD114_BIZ_FILE B WHERE BIZID = #{bizId} AND DELETETIME IS NULL AND
		STATUS ="COMPLETE"
	</select>

	<!-- 상태 WAIT, 삭제되지 않은 사진만 조회 -->
	<select id="selectWaitBizFile" parameterType="hashmap"
		resultType="teamProject.food114.model.BizFile">
		SELECT B.*, CONCAT(FILEPATH, FILENAME) AS PATH FROM
		FOOD114_BIZ_FILE B WHERE BIZID = #{bizId} AND DELETETIME IS NULL AND
		STATUS ="WAIT"
	</select>

	<select id="selectCategory" parameterType="hashmap"
		resultType="teamProject.food114.model.Category">
		SELECT * FROM FOOD114_CATEGORY
	</select>

	<!-- 이미지 파일 미리보기 실행시 -->
	<update id="updateBizFile" parameterType="hashmap">
		UPDATE FOOD114_BIZ_FILE
		SET DELETETIME = NOW(),
		STATUS="DELETE"
		WHERE BIZID = #{bizId} AND
		DELETETIME IS NULL AND STATUS="WAIT"
	</update>

	<!-- 사업자 정보 수정시 -->
	<update id="updateBizInfo" parameterType="hashmap">
		UPDATE FOOD114_BIZ_INFO
		SET bizname=#{bizName},
		ownername=#{ownerName},
		email=#{email},
		phone=#{phone},
		udate=now(),
		bank=#{bank},
		accountnumber=#{accountNumber},
		bizcategory=#{bizCategory},
		opentime=#{openTime},
		closetime=#{closeTime},
		oldaddr=#{oldAddr},
		newAddr=#{newAddr},
		detail=#{detail},
		latitude=#{latitude},
		longitude=#{longitude},
		`range`=#{range}
		WHERE bizid=#{bizId}
	</update>

	<!-- biz 로고사진 파일 수정시1 -->
	<update id="updateBizFileCompleteToDelete"
		parameterType="hashmap">
		UPDATE FOOD114_BIZ_FILE
		SET DELETETIME = NOW(),
		STATUS="DELETE"
		WHERE BIZID = #{bizId} AND
		DELETETIME IS NULL AND
		STATUS="COMPLETE"
	</update>

	<!-- biz 로고사진 파일 수정시2 -->
	<update id="updateBizFileWaitToComplete" parameterType="hashmap">
		UPDATE
		FOOD114_BIZ_FILE
		SET STATUS="COMPLETE"
		WHERE BIZID
		= #{bizId} AND
		DELETETIME IS NULL AND STATUS="WAIT"
	</update>

	<!-- 이벤트 중인 사업자 리스트 -->
	<select id="selectBizEventList" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT
		I.BIZID,
		I.BIZNAME,
		OLDADDR,
		IFNULL(
		ROUND(
		AVG(RAITING),
		1
		),
		0
		) AS REVIEWAVG,
		B.TITLE,
		B.CONTENTS,
		COUNT(REVIEWNO) AS REVIEWCNT,
		CONCAT(F.FILEPATH,F.FILENAME) AS PATH,
		DATE_FORMAT(B.BEGINTIME,
		"%y-%m-%d") AS
		BEGINTIME,
		DATE_FORMAT(B.ENDTIME, "%y-%m-%d") AS ENDTIME,
		B.SETBEGINTIME,
		B.SETENDTIME

		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN
		FOOD114_ORDERS O ON I.BIZID = O.BIZID
		LEFT JOIN FOOD114_REVIEW R ON
		O.ORDERNO = R.ORDERNO
		INNER JOIN FOOD114_BOARD B ON I.BIZID = B.USERID
		AND CODE=4 AND ENDYN='N'
		AND B.ENDYN = 'N'
		LEFT JOIN FOOD114_BIZ_FILE F
		ON I.BIZID = F.BIZID
		AND F.STATUS = 'COMPLETE'
		WHERE
		OLDADDR LIKE (
		CONCAT('%', #{selectSi}, '%')
		)
		AND OLDaddr LIKE (
		CONCAT('%',
		#{selectGu}, '%')
		)
		AND OLDaddr LIKE (
		CONCAT('%', #{selectDong}, '%')
		)
		GROUP BY
		I.BIZID
		${order}
	</select>

	<select id="selectAreaList" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT
		I.*,
		REVIEWAVG,
		REVIEWCNT,
		CONCAT(F.FILEPATH,
		F.FILENAME) AS PATH,
		TITLE,
		CONTENTS,
		CATEGORYNAME
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN FOOD114_BIZ_FILE F ON I.BIZID = F.BIZID
		AND F.DELETETIME IS
		NULL
		AND STATUS = 'COMPLETE'
		INNER JOIN (
		SELECT
		I.BIZID,
		B.TITLE,
		B.CONTENTS,
		IFNULL(
		ROUND(
		AVG(RAITING),
		1
		),
		0
		) AS REVIEWAVG,
		COUNT(REVIEWNO) AS REVIEWCNT
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN
		FOOD114_ORDERS O ON I.BIZID = O.BIZID
		LEFT JOIN FOOD114_REVIEW R ON 
		O.ORDERNO = R.ORDERNO AND R.P_REVIEWNO IS NULL
		LEFT JOIN FOOD114_BOARD B ON I.BIZID = B.USERID
		AND B.ENDYN = 'N'
		GROUP BY
		I.BIZID
		) RE ON I.BIZID = RE.BIZID
		INNER JOIN
		FOOD114_CATEGORY C ON I.BIZCATEGORY = C.CATEGORYNO
		WHERE OLDADDR
		LIKE
		CONCAT(#{area},'%')
	</select>

	<select id="selectBizView" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT
		I.*,
		REVIEWAVG,
		REVIEWCNT,
		TITLE,
		CONTENTS,
		CATEGORYNAME,
		CONCAT(F.FILEPATH, F.FILENAME) AS PATH,
		CONCAT(SUBSTRING(I.PHONE,1,3),'-',SUBSTRING(I.PHONE,4,4),'-',SUBSTRING(I.PHONE,8))
		AS SEPAPHONE,
		CONCAT(SUBSTRING(I.OPENTIME,1,2),' :
		',SUBSTRING(I.OPENTIME,3)) AS SEPAOPENTIME,
		CONCAT(SUBSTRING(I.CLOSETIME,1,2),' : ',SUBSTRING(I.CLOSETIME,3)) AS
		SEPACLOSETIME,
		CASE WHEN I.TAKEOUT = '1' THEN "배달"
		WHEN I.TAKEOUT = '2'
		THEN "포장"
		WHEN I.TAKEOUT = '3' THEN "배달, 포장"
		END AS DEVTYPE
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN
		FOOD114_BIZ_FILE F ON I.BIZID = F.BIZID
		AND
		F.DELETETIME IS NULL
		AND
		STATUS = 'COMPLETE'
		INNER JOIN (
		SELECT
		I.BIZID,
		IFNULL(
		ROUND(
		AVG(RAITING),
		1
		),
		0
		) AS REVIEWAVG,
		B.TITLE,
		B.CONTENTS,
		COUNT(REVIEWNO) AS
		REVIEWCNT
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN
		FOOD114_ORDERS O ON I.BIZID =
		O.BIZID
		LEFT JOIN FOOD114_REVIEW R ON
		O.ORDERNO = R.ORDERNO AND R.P_REVIEWNO IS NULL
		LEFT JOIN
		FOOD114_BOARD B ON I.BIZID = B.USERID
		AND B.ENDYN = 'N'
		GROUP BY
		I.BIZID
		) RE ON I.BIZID = RE.BIZID
		INNER JOIN
		FOOD114_CATEGORY C ON
		I.BIZCATEGORY = C.CATEGORYNO
		WHERE I.BIZID =
		#{bizId}
	</select>

	<select id="selectBizListSearchByName" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT
		I.*,
		REVIEWAVG,
		REVIEWCNT,
		CONCAT(F.FILEPATH,
		F.FILENAME) AS PATH,
		TITLE,
		CONTENTS,
		CATEGORYNAME
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN FOOD114_BIZ_FILE F ON I.BIZID = F.BIZID
		AND F.DELETETIME IS
		NULL
		AND STATUS = 'COMPLETE'
		INNER JOIN (
		SELECT
		I.BIZID,
		B.TITLE,
		B.CONTENTS,
		IFNULL(
		ROUND(
		AVG(RAITING),
		1
		),
		0
		) AS REVIEWAVG,
		COUNT(REVIEWNO) AS REVIEWCNT
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN
		FOOD114_ORDERS O ON I.BIZID = O.BIZID
		LEFT JOIN FOOD114_REVIEW R ON
		O.ORDERNO = R.ORDERNO AND R.P_REVIEWNO IS NULL
		LEFT JOIN FOOD114_BOARD B ON I.BIZID = B.USERID
		AND B.ENDYN = 'N'
		GROUP BY
		I.BIZID
		) RE ON I.BIZID = RE.BIZID
		INNER JOIN
		FOOD114_CATEGORY C ON I.BIZCATEGORY = C.CATEGORYNO
		WHERE I.BIZNAME
		LIKE
		CONCAT('%',#{bizName},'%')
	</select>

	<!-- 배달 가능구역에 있는 가게 목록 -->
	<select id="selectBizDelivery" parameterType="hashmap"
		resultType="teamProject.food114.model.Biz">
		SELECT
DATE_FORMAT(RE.BEGINTIME,"%y/%m/%d") AS BEGINTIME,
DATE_FORMAT(RE.ENDTIME,"%y/%m/%d") AS ENDTIME,
		ENDYN,
		I.*,
		REVIEWAVG,
		REVIEWCNT,
		TITLE,
		CONTENTS,
		CATEGORYNAME,
		CONCAT(F.FILEPATH, F.FILENAME) AS PATH,
		OC.ORDERCNT,
		RE.SETBEGINTIME,
		RE.SETENDTIME
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN
		FOOD114_BIZ_FILE F ON
		I.BIZID = F.BIZID
		AND
		F.DELETETIME IS NULL
		AND
		STATUS = 'COMPLETE'
		INNER
		JOIN (
		SELECT
		I.BIZID,
		IFNULL(
		ROUND(
		AVG(RAITING),
		1
		),
		0
		) AS REVIEWAVG,
		B.TITLE,
		B.CONTENTS,
		B.SETBEGINTIME,
		B.SETENDTIME,
		B.BEGINTIME,
		B.ENDTIME,
		COUNT(REVIEWNO) AS
		REVIEWCNT,
		B.ENDYN
		FROM
		FOOD114_BIZ_INFO I
		LEFT JOIN
		FOOD114_ORDERS O ON
		I.BIZID =
		O.BIZID
		LEFT JOIN FOOD114_REVIEW R ON
		O.ORDERNO = R.ORDERNO AND R.P_REVIEWNO IS NULL
		LEFT JOIN
		FOOD114_BOARD B ON I.BIZID = B.USERID
		AND B.ENDYN = 'N'
		GROUP
		BY
		I.BIZID
		) RE ON I.BIZID = RE.BIZID
		INNER JOIN
		FOOD114_CATEGORY C ON
		I.BIZCATEGORY = C.CATEGORYNO
		LEFT JOIN ( SELECT
		i.bizid,COUNT(status)
		AS
		ORDERCNT FROM FOOD114_BIZ_INFO i
		LEFT JOIN
		FOOD114_ORDERS o ON
		i.BIZID=o.BIZID AND STATUS="결제완료"
		GROUP BY i.bizid)
		OC ON
		OC.BIZID=I.BIZID
		WHERE BIZCATEGORY LIKE
		(#{nowCategory}) ${keyword}
		${order}
	</select>

	<select id="selectMenuSample" parameterType="hashmap"
		resultType="teamProject.food114.model.Menu">
		SELECT MENU,
		PRICE,
		CONCAT(FILEPATH, FILENAME) AS PATH FROM FOOD114_MENU WHERE BIZID =
		#{bizId} LIMIT 4
	</select>

	<select id="selectMenuTotalCount" parameterType="hashmap"
		resultType="teamProject.food114.model.Menu">
		SELECT COUNT(*) AS TOTALCNT FROM FOOD114_MENU WHERE BIZID =
		#{bizId}
	</select>
</mapper>