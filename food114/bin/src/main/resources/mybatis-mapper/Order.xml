<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamProject.food114.mapper.OrderMapper">
	<!-- 주문할 고객 주소 검색 쿼리  -->
	<select id="selectUserAddr" parameterType="hashmap" resultType="teamProject.food114.model.CustomerAddr">
		SELECT *
		FROM FOOD114_CONSUMER_ADDR 
		WHERE USERID = #{userId}
	</select>
	
	<select id="selectOrderList" parameterType="hashmap" resultType="teamProject.food114.model.Order">
		SELECT
		    FO.ORDERNO,
		    GROUP_CONCAT(CONCAT(FM.MENU, ' (', FD.COUNT, ')') SEPARATOR ', ') AS 'MENULIST',
		    SUM(FD.COUNT * FD.UNITPRICE) AS 'TOTALAMOUNT',
		    FO.USERID,
		    FO.ORDERDATE
		FROM
		    FOOD114_ORDERS FO
		    INNER JOIN FOOD114_ORDER_DETAIL FD ON FO.ORDERNO = FD.ORDERNO
		    INNER JOIN FOOD114_MENU FM ON FD.MENUNO = FM.MENUNO
		WHERE
    		FO.BIZID = #{bizId}
		GROUP BY
    		FO.ORDERNO, FO.USERID, FO.ORDERDATE
	</select>
	
	<select id="selectOrderCount" parameterType="hashmap" resultType="teamProject.food114.model.Order">
		SELECT COUNT(*) AS CNT FROM FOOD114_ORDERS WHERE BIZID = #{bizId}
	</select>
	
	<!-- 주문하기  -->	
	<insert id="insertOrderAdd" parameterType="hashmap" useGeneratedKeys="true" keyProperty="ORDERNO" keyColumn="ORDERNO">
		INSERT INTO FOOD114_ORDERS (USERID, BIZID, ADDR, DETAIL, PHONE, ORDERDATE,STATUS)
		VALUES(#{userId}, #{bizId}, #{addr},#{detail},#{phone},NOW(),#{status})
	</insert>
	<insert id="insertOrderDetailAdd" parameterType="hashmap" >
		INSERT INTO FOOD114_ORDER_DETAIL
		VALUES (#{ORDERNO},#{menuNo}, #{count}, #{unitPrice})
	</insert>
	<!-- 주문상태  -->
	<update id="updateOrderStatus" parameterType="hashmap">
		UPDATE FOOD114_ORDERS
		SET STATUS = #{status}
		WHERE ORDERNO = #{orderNo}
	</update>
	<!-- 주문 내용 저장  -->
	<update id="updateOrder" parameterType="hashmap">
		UPDATE FOOD114_ORDERS
		SET 
			DETAIL = #{detail},
			PHONE = #{phone},
			ORDERREQUEST = #{orderRequest},
			DELIVERYREQUEST = #{deliveryRequest}
		WHERE ORDERNO = #{orderNo}
	</update>
	<!-- 주문 중 메뉴 삭제 -->
	<delete id="deleteMenu" parameterType="hashmap">
		DELETE
		FROM FOOD114_ORDER_DETAIL
		WHERE ORDERNO = #{orderNo} AND MENUNO = #{menuNo}
	</delete>
	
	<select id="selectDaySell" parameterType="hashmap" resultType="teamProject.food114.model.Order">
		SELECT DATEDATE AS DAY,SUM(SUMSUM) AS SUM FROM
		(SELECT O.ORDERNO, SUM(UNITPRICE * COUNT) AS SUMSUM, DATE_FORMAT(O.ORDERDATE, '%Y-%m-%d') AS DATEDATE
		FROM FOOD114_ORDERS O 
		INNER JOIN FOOD114_ORDER_DETAIL D ON O.ORDERNO = D.ORDERNO
		WHERE BIZID = #{bizId}
		GROUP BY O.ORDERNO) T GROUP BY T.DATEDATE
	</select>
</mapper>